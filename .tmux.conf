################################# Variables ###################################

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
           sed -En "s/^tmux[^0-9]*([.0-9]+).*/\1/p")'
# Setup condition checks
TMUX_GTE3='[ "$(echo "$TMUX_VERSION >= 3" | bc)" = 1 ]'
TMUX_LT3='[ "$(echo "$TMUX_VERSION < 3" | bc)" = 1 ]'

############################## General settings ###############################

# set pane and window index starts to 1
set -g base-index 1
setw -g pane-base-index 1

# renumber windows to keep the window numbers consistent
set -g renumber-windows on

# do not allow automatic renaming
setw -g allow-rename off

# enable mouse mode
set -g mouse on

# enable true color mode
set-option -ga terminal-overrides ",xterm-256color:Tc"

# vi mode
setw -g xterm-keys on
setw -g mode-keys vi

# tmux window titling for X
set -g set-titles on
set -g set-titles-string "[#I > #W]"

################################ Key bindings #################################

# key binding prefix keys:
#  -n this flag allows the key-binding to run without need for the prefix key
#  -r this flag allows key-bindings to be repeated without requiring the prefix key

# set prefix to Ctrl-Space
# unbind C-b
# set -g prefix C-Space
# bind Space send-prefix

# reload config file
bind r source-file ~/.tmux.conf\; display-message "~/.tmux.conf reloaded"

# create new window
# new windows will be created in the directory of the pane you ran the command from
bind c new-window -c "#{pane_current_path}"

# split panes using | and -
# bind | split-window -h
# bind - split-window -v
# or similar like above just no shift required, but easy to remember to |
# and new panes will be created in the directory of the pane you ran the command from
if-shell -b "$TMUX_GTE3" \
  'bind \\ split-window -h  -c \'#{pane_current_path}\''
if-shell -b "$TMUX_LT3" \
  'bind \ split-window -h -c \'#{pane_current_path}\''
bind - split-window -v  -c '#{pane_current_path}'
unbind '"'
unbind %

# moving between panes and vim windows
bind -n C-h run "(tmux display -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
if-shell -b "$TMUX_GTE3" \
  'bind -n C-\\ run "(tmux display -p \'#{pane_current_command}\' | grep -iq vim && tmux send-keys \'C-\\\') || tmux select-pane -l"'
if-shell -b "$TMUX_LT3" \
  'bind -n C-\ run "(tmux display -p \'#{pane_current_command}\' | grep -iq vim && tmux send-keys \'C-\\') || tmux select-pane -l"'

# breaking a pane out to a new window
bind b break-pane -d

# prompted join-pane to the current window
bind j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# easily swap a pane (targeted by pane number) with the current pane
bind s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# forward / backward windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# session navigation
bind C-t choose-tree

# resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left  resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down  resize-pane -D 1
bind -n S-Up    resize-pane -U 1
# coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left  resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down  resize-pane -D 5
bind -n C-Up    resize-pane -U 5

# copy/paste w/ system clipboard (on MacOS)
# brew install reattach-to-user-namespace
# bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
# bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# killing sessions
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

#################################### Theme ####################################

# status bar
set -g status "on"
set -g status-justify "left"
set -g status-bg "#3c3836"

# status left
set -g status-left-length "100"
set -g status-left "#[fg=#282828,bg=#a89984,bold] #S #[fg=#a89984,bg=#3c3836,nobold,nounderscore,noitalics]"

# status right
set -g status-right-length "100"
set -g status-right "#[fg=#504945,bg=#3c3836,nobold,nounderscore,noitalics]#[fg=#a89984,bg=#504945] #{battery_percentage} #{battery_icon_charge}  %Y-%m-%d  %H:%M #[fg=#a89984,bg=#504945,nobold,nounderscore,noitalics]#[fg=#282828,bg=#a89984] #h "

# window
setw -g window-status-separator ""
setw -g window-status-format "#[fg=#a89984,bg=#3c3836] #I #[fg=#a89984,bg=#3c3836] #W "

# active window
setw -g window-status-current-format "#[fg=#3c3836,bg=#fabd2f,nobold,nounderscore,noitalics]#[fg=#282828,bg=#fabd2f] #I #[fg=#282828,bg=#fabd2f] #W #[fg=#fabd2f,bg=#3c3836,nobold,nounderscore,noitalics]"

# panes
set -g pane-active-border-style fg="#fabd2f"
set -g pane-border-style fg="#3c3836"

# command bar
set -g message-command-style fg="#a89984",bg="#3c3836"
set -g message-style fg="#a89984",bg="#3c3836"

################################### Plugins ###################################

# Install tpm
# First, we need to install tpm itself:
#
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# Add the following setting to your tmux configuration file .tmux.conf:
#
# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# .... maybe more plugins here
#
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'
#
# Examples:
# set -g @plugin "github_username/plugin_name"
# set -g @plugin "git@github.com/user/plugin"
# set -g @plugin "git@bitbucket.com/user/plugin"
#
# Reload TMUX environment so TPM is sourced:
#
# type this in terminal if tmux is already running
# $ tmux source ~/.tmux.conf
#
# That's it!
#
# Installing plugins
# Add new plugin to ~/.tmux.conf with set -g @plugin '...'
# Press prefix + I (capital I, as in Install) to fetch the plugin.
# You're good to go! The plugin was cloned to ~/.tmux/plugins/ dir and sourced.
#
# Uninstalling plugins
# Remove (or comment out) plugin from the list.
# Press prefix + alt + u (lowercase u as in uninstall) to remove the plugin.
# All the plugins are installed to ~/.tmux/plugins/ so alternatively you can find plugin directory there and remove it.
#
# Key bindings
# prefix + I
#
# Installs new plugins from GitHub or any other git repository
# Refreshes TMUX environment
# prefix + U
#
# updates plugin(s)
# prefix + alt + u
#
# remove/uninstall plugins not on the plugin list

set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"
set -g @plugin 'tmux-plugins/tmux-battery'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "~/.tmux/plugins/tpm/tpm"
